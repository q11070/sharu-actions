# This is a basic workflow that is manually triggered

name: Deployment

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Version to deploy'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      environment:
        description: 'Select the target environment to deploy'
        default: 'development'
        options:
          - development
          - testing
          - production
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  deployMaximBio:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout selected Branch
      uses: actions/checkout@v3
      with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
    - name: Display current branch
      run: git branch
    - name: Display build number
      run: echo '${{github.run_number}}'
    - name: Set Node Version
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: yarn install
    - name: Build App
      run: yarn build
      env:
        REACT_APP_VERSION: v${{github.event.inputs.version}}.${{github.run_number}}
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Archive the build folder
      run: tar czvf maximbio_${{github.event.inputs.version}}.${{github.run_number}}.tar.gz ./build/.
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{github.event.inputs.version}}.${{github.run_number}}
        commit: ${{ steps.extract_branch.outputs.branch }}
        artifacts: maximbio_${{github.event.inputs.version}}.${{github.run_number}}.tar.gz 
        prerelease: true
        token: ${{ secrets.PAT }}